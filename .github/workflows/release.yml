name: Release

on:
  release:
    types:
      - published

env:
  IMAGE_NAME_WEB: rokeller/photo-search
  IMAGE_NAME_EMBEDDING: rokeller/photo-search-embedding
  CARGO_TERM_COLOR: always
  RUSTUP_TOOLCHAIN: stable
  RUST_FINAL_TARGET: x86_64-unknown-linux-musl

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build web docker image
        run: |
          echo "Build photo-search image tag '$GITHUB_REF_NAME' ..."

          docker image build \
            --build-arg APP_VERSION=$GITHUB_REF_NAME \
            -t ${{ env.IMAGE_NAME_WEB }}:$GITHUB_REF_NAME \
            -f containers/web-server.Dockerfile \
            .

      - name: Cache cargo registry
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust
        run: |
          rustup update ${{ env.RUSTUP_TOOLCHAIN }}
          rustup default ${{ env.RUSTUP_TOOLCHAIN }}
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build Rust
        run: |
          echo "*** Build for ${{ env.RUST_FINAL_TARGET }}"
          cross build --release --target ${{ env.RUST_FINAL_TARGET }}

      - name: Build embedding server docker image
        run: |
          echo "Build photo-search-embedding image tag '$GITHUB_REF_NAME' ..."

          docker image build \
            --build-arg APP_VERSION=$GITHUB_REF_NAME \
            -t ${{ env.IMAGE_NAME_EMBEDDING }}:$GITHUB_REF_NAME \
            -f containers/embedding-server.Dockerfile \
            .

      - name: Push docker images
        run: |
          echo -n "${{ secrets.DOCKER_PASSWORD }}" | docker login \
            -u ${{ secrets.DOCKER_USERNAME }} \
            --password-stdin

          docker image push ${{ env.IMAGE_NAME_WEB }}:$GITHUB_REF_NAME
          docker image push ${{ env.IMAGE_NAME_EMBEDDING }}:$GITHUB_REF_NAME

          docker logout
