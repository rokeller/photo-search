name: PR

on:
  pull_request:
    types: [opened, reopened, synchronize]

env:
  CARGO_TERM_COLOR: always
  RUSTUP_TOOLCHAIN: stable
  RUST_FINAL_TARGET: x86_64-unknown-linux-musl

jobs:
  build-test-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v6
        with:
          node-version: 22.x

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Build Client
        run: |
          pnpm -C client install
          pnpm -C client lint
          VITE_APP_VERSION=pull_request pnpm -C client build

  build-test-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: 'srv/web/go.mod'
          cache-dependency-path: |
            srv/web/go.sum

      - name: Build Web Server
        run: go build -C srv/web

  build-test-rust:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Cache cargo registry
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust
        run: |
          rustup update ${{ env.RUSTUP_TOOLCHAIN }}
          rustup default ${{ env.RUSTUP_TOOLCHAIN }}
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build Rust
        run: |
          echo "*** Build for ${{ env.RUST_FINAL_TARGET }}"
          cross build --target ${{ env.RUST_FINAL_TARGET }}
